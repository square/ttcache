name: PHP

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    container: ubuntu:latest
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: ['8.0', '8.1', '8.2']
        psr: ['2.0', '3.0']

    name: 'PHP ${{ matrix.php }} - Simple Cache: ${{matrix.psr}}'

    services:
      redis:
        image: redis:latest
      memcached:
        image: memcached:latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup PHP with PECL extension
      uses: shivammathur/setup-php@v2
      with:
        php-version: '${{ matrix.php }}'
        extensions: memcached, redis

    #- name: Setup Memcache
    #  uses: niden/actions-memcached@v7

    #- name: Setup Redis
    #  uses: zhulik/redis-action@1.1.0

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer update --with='psr/simple-cache:${{matrix.psr}}' --prefer-dist --no-interaction --no-progress

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    - name: Run static analysis
      run: ./vendor/bin/phpstan analyse src tests --level 5

    - name: Run unit tests
      run: ./vendor/bin/phpunit tests
